// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchemeServe.Provider.Api.Infrastructure.Data;

#nullable disable

namespace SchemeServe.Provider.Api.Migrations
{
    [DbContext(typeof(ProviderContext))]
    [Migration("20250721111833_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchemeServe.Provider.Api.Infrastructure.Data.Entities.LocationEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderEntityProviderId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProviderEntityProviderId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("SchemeServe.Provider.Api.Infrastructure.Data.Entities.ProviderEntity", b =>
                {
                    b.Property<string>("ProviderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BrandId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompaniesHouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Constituency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionDirectorate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastInspection")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocalAuthority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("OnSpdLatitude")
                        .HasColumnType("float");

                    b.Property<double?>("OnSpdLongitude")
                        .HasColumnType("float");

                    b.Property<string>("OrganisationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnershipType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddressCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddressTownCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uprn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("SchemeServe.Provider.Api.Infrastructure.Data.Entities.LocationEntity", b =>
                {
                    b.HasOne("SchemeServe.Provider.Api.Infrastructure.Data.Entities.ProviderEntity", null)
                        .WithMany("Locations")
                        .HasForeignKey("ProviderEntityProviderId");
                });

            modelBuilder.Entity("SchemeServe.Provider.Api.Infrastructure.Data.Entities.ProviderEntity", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
